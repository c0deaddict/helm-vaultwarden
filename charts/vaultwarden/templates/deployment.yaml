{{- $fullName := include "vaultwarden.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ include "vaultwarden.name" . }}
    helm.sh/chart: {{ include "vaultwarden.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vaultwarden.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vaultwarden.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ $fullName }}-conf
        {{- if .Values.deployment.secrets }}
        {{- range .Values.deployment.secrets }}
        - secretRef:
            name: {{ . }}
        {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.vaultwarden.rocket_port }}
          protocol: TCP
        {{- if .Values.vaultwarden.websocket_enabled }}
        - name: ws
          containerPort: {{ .Values.vaultwarden.websocket_port }}
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        {{- if .Values.securityContext.enabled }}
        securityContext:
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        {{ if .Values.storage.enabled -}}
        volumeMounts:
        - mountPath: {{ .Values.storage.path }}
          name: data-storage
        {{ end }}
      {{- with .Values.deployment.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{ if .Values.storage.enabled -}}
      volumes:
      - name: data-storage
        persistentVolumeClaim:
         claimName: {{ $fullName }}-pv
      {{ end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
